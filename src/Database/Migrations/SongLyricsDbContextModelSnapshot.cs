// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuzakBot.Database;

#nullable disable

namespace MuzakBot.Database.Migrations
{
    [DbContext(typeof(SongLyricsDbContext))]
    partial class SongLyricsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("MuzakBot.Lib.Models.Database.LyricsAnalyzer.SongLyricsItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id")
                        .HasAnnotation("Cosmos:PropertyName", "id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("artistName")
                        .HasAnnotation("Cosmos:PropertyName", "artistName")
                        .HasAnnotation("Relational:JsonPropertyName", "artistName");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdAt")
                        .HasAnnotation("Cosmos:PropertyName", "createdAt")
                        .HasAnnotation("Relational:JsonPropertyName", "createdAt");

                    b.Property<string>("Lyrics")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("lyrics")
                        .HasAnnotation("Cosmos:PropertyName", "lyrics")
                        .HasAnnotation("Relational:JsonPropertyName", "lyrics");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("partitionKey")
                        .HasAnnotation("Cosmos:PropertyName", "partitionKey")
                        .HasAnnotation("Relational:JsonPropertyName", "partitionKey");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("songName")
                        .HasAnnotation("Cosmos:PropertyName", "songName")
                        .HasAnnotation("Relational:JsonPropertyName", "songName");

                    b.HasKey("Id");

                    b.ToTable("song_lyrics", (string)null);

                    b
                        .HasAnnotation("Cosmos:ContainerName", "song_lyrics")
                        .HasAnnotation("Cosmos:PartitionKeyName", "PartitionKey");
                });

            modelBuilder.Entity("MuzakBot.Lib.Models.Database.LyricsAnalyzer.SongLyricsRequestJob", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id")
                        .HasAnnotation("Cosmos:PropertyName", "id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdAt")
                        .HasAnnotation("Cosmos:PropertyName", "createdAt")
                        .HasAnnotation("Relational:JsonPropertyName", "createdAt");

                    b.Property<bool>("FallbackMethodNeeded")
                        .HasColumnType("INTEGER")
                        .HasColumnName("fallbackMethodNeeded")
                        .HasAnnotation("Cosmos:PropertyName", "fallbackMethodNeeded")
                        .HasAnnotation("Relational:JsonPropertyName", "fallbackMethodNeeded");

                    b.Property<string>("GeniusUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("geniusUrl")
                        .HasAnnotation("Cosmos:PropertyName", "geniusUrl")
                        .HasAnnotation("Relational:JsonPropertyName", "geniusUrl");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("isCompleted")
                        .HasAnnotation("Cosmos:PropertyName", "isCompleted")
                        .HasAnnotation("Relational:JsonPropertyName", "isCompleted");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("partitionKey")
                        .HasAnnotation("Cosmos:PropertyName", "partitionKey")
                        .HasAnnotation("Relational:JsonPropertyName", "partitionKey");

                    b.Property<string>("SongLyricsItemId")
                        .HasColumnType("TEXT")
                        .HasColumnName("songLyricsItemId")
                        .HasAnnotation("Cosmos:PropertyName", "songLyricsItemId")
                        .HasAnnotation("Relational:JsonPropertyName", "songLyricsItemId");

                    b.Property<bool>("StandaloneServiceAcknowledged")
                        .HasColumnType("INTEGER")
                        .HasColumnName("standaloneServiceAcknowledged")
                        .HasAnnotation("Cosmos:PropertyName", "standaloneServiceAcknowledged")
                        .HasAnnotation("Relational:JsonPropertyName", "standaloneServiceAcknowledged");

                    b.HasKey("Id");

                    b.ToTable("song_lyrics_request_jobs", (string)null);

                    b
                        .HasAnnotation("Cosmos:ContainerName", "song_lyrics_request_jobs")
                        .HasAnnotation("Cosmos:PartitionKeyName", "PartitionKey");
                });
#pragma warning restore 612, 618
        }
    }
}
